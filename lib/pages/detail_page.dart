import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:share/share.dart';import 'package:weather_app/model/weather_model.dart';import 'package:weather_app/pages/setting_page.dart';import 'home_page.dart';class DetailPage extends StatefulWidget {  final ListElement weather;  const DetailPage({Key key, this.weather}) : super(key: key);  @override  _DetailPageState createState() => _DetailPageState();}class _DetailPageState extends State<DetailPage> {  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        leading: IconButton(          icon: Icon(            Icons.arrow_back_ios,            color: Colors.white,          ),          onPressed: () {            Navigator.pop(context);          },        ),        title: Text('Detail'),        actions: <Widget>[          IconButton(            icon: Icon(              Icons.share,              color: Colors.white,            ),            onPressed: () {              Share.share('Hari ini :' + DateUnix(widget.weather.dt));            },          ),          Container(            margin: EdgeInsets.only(right: 20, left: 10),            child: PopupMenuButton<int>(              onSelected: (value) {                print('ONSELEC = $value');                Navigator.of(context).push(                  MaterialPageRoute(                    builder: (BuildContext context) => SettingPage(),                  ),                );              },              child: Icon(                Icons.more_vert,                color: Colors.white,              ),              itemBuilder: (context) => [                PopupMenuItem(                  value: 1,                  child: Text('Setting'),                ),              ],            ),          ),        ],      ),      body: Column(        crossAxisAlignment: CrossAxisAlignment.start,        children: <Widget>[          Container(            margin: EdgeInsets.only(top: 30, left: 20),            child: Text(              DateUnix(widget.weather.dt),              style: TextStyle(fontWeight: FontWeight.bold, fontSize: 30),            ),          ),          Row(            children: <Widget>[              Container(                height: 250,                child: Column(                  crossAxisAlignment: CrossAxisAlignment.start,                  children: <Widget>[                    Container(                      margin: EdgeInsets.only(left: 50, top: 50),                      child: Text('${widget.weather.temp.max} ℃',                          style: TextStyle(                              color: Colors.black,                              fontSize: 50,                              fontWeight: FontWeight.bold)),                    ),                    Container(                      margin: EdgeInsets.only(left: 50, top: 20),                      child: Text('${widget.weather.temp.min} ℃',                          style: TextStyle(                              color: Colors.black,                              fontSize: 30,                              fontWeight: FontWeight.bold)),                    ),                  ],                ),              ),              Container(                margin: EdgeInsets.only(left: 30),                height: 250,                child: Column(                  crossAxisAlignment: CrossAxisAlignment.center,                  mainAxisAlignment: MainAxisAlignment.center,                  children: <Widget>[                    CloudIconCheck(widget.weather.temp.day, 3),                    CloudTextCheck(widget.weather.temp.day, 3)                  ],                ),              ),            ],          ),        ],      ),    );  }}